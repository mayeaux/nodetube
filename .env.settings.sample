# NodeTube Settings. Use this file to turn functionality off and on.
# Whereas .env.private should be 'set and forget' and are private,
# .env.settings are less sensitive and changed more often.

## TECHNICAL SETTINGS ##

# determine which routes you want activated:
# has all web app routes, allows users to interact with file hosting
FRONTEND=true

# whether you want to run the app specifically to receive uploads and serve files
FILE_HOST=false

# whether to run authentication routes and fileserving for livestreaming
LIVESTREAM_APP=false

# set node env
NODE_ENV='development'

# whether to run ngrok from app.js
RUN_NGROK=true

# set web_concurrency for cluster API (livestream server should only equal 1, otherwise websockets don't work)
WEB_CONCURRENCY=1

## FILEHOST SETTINGS ##
# whether to save files to local directory and serve them locally
SAVE_AND_SERVE_FILES='true'

# local directory from which to serve files
SAVE_AND_SERVE_FILES_DIRECTORY='./uploads'

# whether to allow cross-origin-requests (use if using app as file_host)
ALLOW_COR=false

# upload files to B2 hosting using built-in integration (keys in .env.private file)
UPLOAD_TO_B2=false

# algorithm to mitigate viewbotting
CUSTOM_FRAUD_DETECTION=false

## CACHING SETTINGS ##
# whether to cache db results into redis
CACHING_ON=true

# whether to activate caching logs coming through the console
LOG_CACHING=false

# how long caching functionality should be run
CACHE_INTERVAL_IN_MINUTES=5

# cache interval for recent uploads
CACHE_RECENT_INTERVAL_IN_MINUTES=1

# email functionality
FORGOT_PASSWORD_EMAIL_FUNCTIONALITY_ON=false
CONFIRM_USER_EMAIL_FUNCTIONALITY_ON=false

# meta tags for online sharing
META_DESCRIPTION=NodeTube - An open source file hosting platform built on NodeJS
META_IMAGE=https://nodetube.live/images/full_size_logo.png

# serve from files that are saved locally
LOCAL_BACKUP_ON=false
LOCAL_BACKUP_DIRECTORY=''

# show location of log in console (helper function)
SHOW_LOG_LOCATION=false

# sets the thumbnail server that will be posted to during editing of thumbnails for uploads and user ( to separate file hosting from the frontend)
# if this is an empty string it will use the local route (aka api/upload/${upload.uniqueTag}/edit )
THUMBNAIL_SERVER=

# sets the frontend server for a user to be redirected to after they have edited a thumbnail
# if this is an empty string it will use the local route
FRONTEND_SERVER=''

# mail listening scripts
EMAIL_LISTENER_ON=false
SAVE_SEEN_EMAILS=false

# whether to have mongoose logs come through console
MONGOOSE_DEBUG=off

# incomplete #
CURRENT_UPLOAD_SERVER=uploads3

## WIDGETS ##
RECAPTCHA_ON=false

GOOGLE_ANALYTICS_ON=false

COINHIVE_ON=false

ZOPIM_ON=false

# ADMIN SETTINGS #
# require uploads to be moderated to be pubilcly visible
# false means posts show up publicly visible
# true means they need to be moderated
RESTRICT_UNTRUSTED_UPLOADS=false

// show all or categories page via popular on header
// set default to all, other option 'overview'
POPULAR_DEFAULT='all'

# functionality to disable uploads sitewide
UPLOADS_ON=true

# level you want to allow, order from least to most controversial allowed [SFW,NSFW,SENSITIVE]
MAX_RATING_ALLOWED=SFW

# whether users can purchase access to advanced features in freemium model
PLUS_ENABLED=false

# whether moderation requests are sent to discord
MODERATION_UPDATES_TO_DISCORD=false

#
GET_CACHE=true

# this is loaded on the model to determine how the max size of an upload when user is created
DEFAULT_MAX_UPLOAD_SIZE_IN_MB=500

# allow users to buy a Plus subscription for the site
PLUS_ENABLED=false

# enable notification emails (users can disable this)
NOTIFICATION_EMAILS_ENABLED=true

# default landing page [default, globe]
DEFAULT_LANDING_PAGE=default
