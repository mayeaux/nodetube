extends ../layout




block content
    style.
        .editLink  {
            display: inline-block;
        }

block content
    style.
        .dropdown {
            text-align: center;
        }

        .button, .dropdown-menu {
            margin: 10px auto
        }

        .dropdown-menu {
            width: 200px;
            left: 50%;
            margin-left: -100px;
        }

        input[type=checkbox] {
            /* Double-sized Checkboxes */
            -ms-transform: scale(2); /* IE */
            -moz-transform: scale(2); /* FF */
            -webkit-transform: scale(2); /* Safari and Chrome */
            -o-transform: scale(2); /* Opera */
            padding: 10px;
        }

        .pewtube-pro {
            background: #edeeee;
            font-weight: 400;
            font-size: 13px;
            margin-left: 3px;
            padding: 8px 9px;
            display: inline-block;
            border-radius: 3px;
            transform: translateY(-2px);
        }


    div.channel-information.container
        div.col-sm-12
            div.col-sm-4
                h3 #{channel.channelName || channel.channelUrl}
                    if channel.verified == true
                        img(src="/images/verified.jpg" width="25px" height="25px" style="margin-left:3px;margin-top:-2px;margin-right:5px;")
                    if channel.plan == 'plus'
                        span.pewtube-pro PLUS
            div.user-stats.col-sm-6(style="margin-top:14px")
                div.col-sm-3
                    h5 Uploads: #{userUploadAmount} &nbsp &nbsp
                div.col-sm-3
                    h5 Views : #{channel.totalViews}
                div.col-sm-3
                    h5 Joined: #{joinedTimeAgo}
                if channel.receivedSubscriptions
                    div.col-sm-3
                        h5 Subscribers : #{channel.receivedSubscriptions.length}
                else
                    div.col-sm-3
                        h5 Subscribers : 0
            br
            br
            br
            br
            if channel.thumbnailUrl || channel.customThumbnail
                div.col-sm-2
                    if channel.customThumbnail
                        img(src=`${uploadServer}/${channel.channelUrl}/${channel.customThumbnail}` width="120px" height="120px")
                    else
                        img(src=`${uploadServer}/${channel._id}/unique.png` width="120px" height="120px")

                    //img(src=channel.thumbnailUrl width="120px" height="120px")


            div.col-sm-8
                p(id="descriptionText") #{channel.channelDescription}
                if user && user.role == 'admin'
                    each ip in ips
                        p= ip


                if alreadySubbed
                    button.subscribe.btn.btn-success Subscribed (#{subscriberAmount})
                else
                    button.subscribe.btn.btn-success Subscribe (#{subscriberAmount})

                if user && ( user.role == 'admin' || user.role == 'moderator') && channel.status !== 'restricted'
                    br
                    br
                    button.delete-account.btn.btn-danger Delete Account
                    //button.delete-account.btn.btn-danger Delete Account And Ban Ip
                    if user.role == 'admin'
                        button.delete-ips.btn.btn-danger Delete All Accounts / Ips

                if user && ( user.role == 'admin' || user.role == 'moderator') && channel.status == 'restricted'

                    br
                    h3 ACCOUNT DELETED
                    button.undelete-account.btn.btn-warning Undelete Account
                    //button.undelete-account.btn.btn-warning Undelete Account And Unban Ip
                    if user.role == 'admin'
                        button.delete-ips.btn.btn-warning Undelete All Accounts / Unban All Ips

        br
        div
        br

    div(style="margin-top:80px;")
        div

    br
    br
    br
    br
    br
    p
    hr

    br
    div.center-block.text-center
        div.dropdown(style="display:inline;margin-right:15px;")
            button.btn.btn-primary.dropdown-toggle(type='button', data-toggle='dropdown' style="border-radius:5px")
                | Order By: #{orderByEnglishString} &nbsp
                span.caret

            ul.dropdown-menu.dropdown
                li
                    a(href=`/user/${channel.channelUrl}?orderBy=popular`) Popular
                li
                    a(href=`/user/${channel.channelUrl}?orderBy=newToOld`) New To Old
                li
                    a(href=`/user/${channel.channelUrl}?orderBy=oldToNew`) Old To New
                li
                    a(href=`/user/${channel.channelUrl}?orderBy=alphabetical`) Alphabetical

        include ../viewPartials/sensitivityFilterDropdown

        include ../viewPartials/channelOverviewPagination

    br
    br

    div.container
        each upload in channel.uploads
            div.col-sm-4(style="text-align:center;height:360px")
                if isUser || isAdmin || ( user && user.role == 'moderator' )
                    div.editFileButtons
                        form.editLink(action="/api/upload/delete" method="POST" style="display:inline-block")
                            input(type='hidden', name='_csrf', value=_csrf)
                            input(type='hidden', name='videoId', value=upload.uniqueTag)
                            button.btn.btn-danger.delete-media Delete
                        if isUser || isAdmin || user.role == 'moderator'
                            a.editLink(href=`/user/${channel.channelUrl}/${upload.uniqueTag}/edit` style="display:inline-block")
                                button.btn.btn-primary Edit


                include ../viewPartials/uploadThumbnail

                include ../viewPartials/uploadDetails

    include ../viewPartials/adminSensitivityButtons

    include ../viewPartials/changeSensitivityFilterJs

    include ../viewPartials/mouseOverJavascript

    if user
        script.
          var user = '#{user.channelUrl}'
    else
        script.
          var user = undefined

    script.
      var amountOfSubs = #{subscriberAmount}
      var alreadySubbed = #{alreadySubbed}

      $('.subscribe').on('touchstart click', function (e) {

        if (!user) {
          return swal('Please register an account to subscribe')
        }

        var channelUrl = '#{channel.channelUrl}'
        var csrf = '#{_csrf}'

        // dont move browser
        e.preventDefault();

        if (alreadySubbed) {
          amountOfSubs = amountOfSubs - 1
          alreadySubbed = false;
        } else {
          amountOfSubs = amountOfSubs + 1
          alreadySubbed = true;
        }

        var userName = "#{channel.channelName || channel.channelUrl}"

        if (!alreadySubbed) {
          $('.subscribe').html(`Subscribe (${amountOfSubs})`)
          swal('You have unsubscribed from ' + userName)

        } else {
          $('.subscribe').html(`Subscribed (${amountOfSubs})`)
          swal('You have subscribed to ' + userName )
        }

        //
        var data = {
          _csrf: csrf,
          channelUrl
        }

        $.ajax({
          type: 'POST',
          url: `/api/subscribe`,
          data,
          success: function (data) {
            console.log(data);
          },
          error: function (err) {
            console.log(err);
          }
        });
      })

    script.
      var myTextEl = document.getElementById('descriptionText');
      myTextEl.innerHTML = Autolinker.link(myTextEl.innerHTML);




    script.
      $('.delete-media').on('click', function (e) {
        e.preventDefault();
        var form = $(this).parents('form');

        swal({
          title: "WARNING",
          text: "Are you sure you want to delete this upload?",
          type: "warning",
          showCancelButton: true,
          confirmButtonColor: "#DD6B55",
          confirmButtonText: "Yes, delete it"
        }).then(function (result) {
          if (result.value == true) {
            form.submit();
          }
          console.log(result);
        })
      });

    if user && ( user.role == 'admin' || user.role == 'moderator' )
        script.
            $('.delete-account').on('click', function (e) {
                e.preventDefault();
                swal({
                    title: "WARNING",
                    text: "Are you sure you want to delete this account?",
                    type: "warning",
                    showCancelButton: true,
                    confirmButtonColor: "#DD6B55",
                    confirmButtonText: "Yes, delete it"
                }).then(function (result) {
                      if(result.value !== true){
                        return
                      }

                      var channelUrl = '#{channel.channelUrl}';
                      var csrf = '#{_csrf}';
                        // sweetalert2.js:131 SweetAlert2: Unknown parameter "closeOnConfirm"
                      // dont move browser
                      e.preventDefault();

                      //
                      var data = {
                        _csrf: csrf,
                        channelUrl
                      }

                      console.log(data);

                      $.ajax({
                        type: 'POST',
                        url: `/admin/deleteAccount`,
                        data,
                        success: function (data) {

                          console.log(data);

                          location.reload();

                        },
                        error: function (err) {
                          console.log(err);
                        }
                      });
                });
            });

    if user && ( user.role == 'admin' || user.role == 'moderator' )
        script.
          $('.undelete-account').on('click', function (e) {
            e.preventDefault();
            swal({
              title: "WARNING",
              text: "Are you sure you want to undelete this account?",
              type: "warning",
              showCancelButton: true,
              confirmButtonColor: "#DD6B55",
              confirmButtonText: "Yes, delete it"
            }).then(function (result) {
              if (result.value !== true) {
                return
              }

              var channelUrl = '#{channel.channelUrl}';
              var csrf = '#{_csrf}';
              // sweetalert2.js:131 SweetAlert2: Unknown parameter "closeOnConfirm"
              // dont move browser
              e.preventDefault();

              //
              var data = {
                _csrf: csrf,
                channelUrl
              }

              $.ajax({
                type: 'POST',
                url: `/admin/undeleteAccount`,
                data,
                success: function (data) {

                  console.log(data);

                  location.reload();

                },
                error: function (err) {
                  console.log(err);
                }
              });
            });
          });

    if user && user.role == 'admin'
        script.
          $('.delete-ips').on('click', function (e) {
            e.preventDefault();

            $.ajax({
              type: 'POST',
              url: `/admin/getUserAccounts`,
              data : {
                _csrf: '#{_csrf}',
                channelUrl: '#{channel.channelUrl}'
              },
              success: function (data) {

                // console.log(data);

                var string = '';
                for(var channelUrl of data.channelUrls){
                  string = string + ' ' + channelUrl;
                }

                var siteVisitorAmount = data.ids.length;

                swal({
                  title: "WARNING",
                  text: "Are you sure you want to delete this account?" + string + '. ' + siteVisitorAmount + ' site visitors',
                  type: "warning",
                  showCancelButton: true,
                  confirmButtonColor: "#DD6B55",
                  confirmButtonText: "Yes, delete it"
                }).then(function (result) {
                  if (result.value !== true) {
                    return
                  }

                  var channelUrl = '#{channel.channelUrl}'
                  var csrf = '#{_csrf}'
                  // sweetalert2.js:131 SweetAlert2: Unknown parameter "closeOnConfirm"
                  // dont move browser
                  e.preventDefault();

                  //
                  var data = {
                    _csrf: csrf,
                    channelUrl
                  }

                  console.log(data);

                  $.ajax({
                    type: 'POST',
                    url: `/admin/deleteAllUsersAndBlockIps`,
                    data,
                    success: function (data) {

                      console.log(data);

                      location.reload();

                    },
                    error: function (err) {
                      console.log(err);
                    }
                  });
                });

                console.log(data);

              },
              error: function (err) {
                console.log(err);
              }
            });


          });

block extra_js
  script(src="https://cdnjs.cloudflare.com/ajax/libs/autolinker/1.4.4/Autolinker.js")

