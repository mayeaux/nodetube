extends ../layout

block content

  script(src='https://checkout.stripe.com/checkout.js')



  style.
    .stripe-button-el span {
      display: block;
      position: relative;
      padding: 0 12px;
      height: 30px;
      line-height: 30px;
      background: #1275ff;
      background-image: -webkit-linear-gradient(#7dc5ee, #008cdd 85%, #30a2e4);
      background-image: -moz-linear-gradient(#7dc5ee, #008cdd 85%, #30a2e4);
      background-image: -ms-linear-gradient(#7dc5ee, #008cdd 85%, #30a2e4);
      background-image: -o-linear-gradient(#7dc5ee, #008cdd 85%, #30a2e4);
      background-image: -webkit-linear-gradient(#7dc5ee, #008cdd 85%, #30a2e4);
      background-image: -moz-linear-gradient(#7dc5ee, #008cdd 85%, #30a2e4);
      background-image: -ms-linear-gradient(#7dc5ee, #008cdd 85%, #30a2e4);
      background-image: -o-linear-gradient(#7dc5ee, #008cdd 85%, #30a2e4);
      background-image: linear-gradient(#7dc5ee, #008cdd 85%, #30a2e4);
      font-size: 14px;
      color: #fff;
      font-weight: bold;
      font-family: "Helvetica Neue", Helvetica, Arial, sans-serif;
      text-shadow: 0 -1px 0 rgba(0, 0, 0, 0.25);
      -webkit-box-shadow: inset 0 1px 0 rgba(255, 255, 255, 0.25);
      -moz-box-shadow: inset 0 1px 0 rgba(255, 255, 255, 0.25);
      -ms-box-shadow: inset 0 1px 0 rgba(255, 255, 255, 0.25);
      -o-box-shadow: inset 0 1px 0 rgba(255, 255, 255, 0.25);
      box-shadow: inset 0 1px 0 rgba(255, 255, 255, 0.25);
      -webkit-border-radius: 4px;
      -moz-border-radius: 4px;
      -ms-border-radius: 4px;
      -o-border-radius: 4px;
      border-radius: 4px;
    }

    .stripe-button-el {
      overflow: hidden;
      display: inline-block;
      visibility: visible !important;
      background-image: -webkit-linear-gradient(#28a0e5, #015e94);
      background-image: -moz-linear-gradient(#28a0e5, #015e94);
      background-image: -ms-linear-gradient(#28a0e5, #015e94);
      background-image: -o-linear-gradient(#28a0e5, #015e94);
      background-image: -webkit-linear-gradient(#28a0e5, #015e94);
      background-image: -moz-linear-gradient(#28a0e5, #015e94);
      background-image: -ms-linear-gradient(#28a0e5, #015e94);
      background-image: -o-linear-gradient(#28a0e5, #015e94);
      background-image: linear-gradient(#28a0e5, #015e94);
      -webkit-font-smoothing: antialiased;
      border: 0;
      padding: 1px;
      text-decoration: none;
      -webkit-border-radius: 5px;
      -moz-border-radius: 5px;
      -ms-border-radius: 5px;
      -o-border-radius: 5px;
      border-radius: 5px;
      -webkit-box-shadow: 0 1px 0 rgba(0, 0, 0, 0.2);
      -moz-box-shadow: 0 1px 0 rgba(0, 0, 0, 0.2);
      -ms-box-shadow: 0 1px 0 rgba(0, 0, 0, 0.2);
      -o-box-shadow: 0 1px 0 rgba(0, 0, 0, 0.2);
      box-shadow: 0 1px 0 rgba(0, 0, 0, 0.2);
      -webkit-touch-callout: none;
      -webkit-tap-highlight-color: transparent;
      -webkit-user-select: none;
      -moz-user-select: none;
      -ms-user-select: none;
      -o-user-select: none;
      user-select: none;
      cursor: pointer;
    }

  //form(action='https://www.paypal.com/cgi-bin/webscr', method='post')
  //  // Identify your business so that you can collect the payments.
  //  input(type='hidden', name='business', value='ceo@pew.tube')
  //  // Specify a Subscribe button.
  //  input(type='hidden', name='cmd', value='_xclick-subscriptions')
  //  // Identify the subscription.
  //  input(type='hidden', name='item_name', value="Recurring PewTube Account Top-Up")
  //  //input(type='hidden', name='item_number', value='Purchase Acount Top-Up')
  //  // Set the terms of the regular subscription.
  //  input(type='hidden', name='a3', value='5.00')
  //  input(type='hidden', name='p3', value='1')
  //  input(type='hidden', name='t3', value='M')
  //  // Set recurring payments until canceled.
  //  input(type='hidden', name='src', value='1')
  //  // Provide a drop-down menu option field.
  //  input(type='hidden', name='on0', value='Format')
  //  | Format
  //  br
  //  select(name='os0')
  //    option(value='Select a format') -- Select a format --
  //    option(value='plaintext') Plain text
  //    option(value='HTML') HTML
  //  br
  //  // Display the payment button.
  //  input(type='image', name='submit', src='https://www.paypalobjects.com/webstatic/en_US/i/btn/png/btn_subscribe_113x26.png', alt='Subscribe')
  //  img(alt='', width='1', height='1', src='https://www.paypalobjects.com/en_US/i/scr/pixel.gif')
  if !user.channelUrl
      div.text-center
          h4 Upgrade! Create a new account and you can select a custom username!

  else
      div.row
          div.col-md-2.bg-white
              div.my-5
                  h3.text-center.text-muted Your Profile
                  br
                  if user.customThumbnail
                      img(src=`${uploadServer}/${user.channelUrl}/${user.customThumbnail}` width="120px" height="120px" class="img-circle center-block")
                  else
                      img(src=`/images/default-user-icon.jpg` width="120px" height="120px" class="img-circle center-block")
                                              
                  h3.text-center #{user.channelUrl}
                  if user.verified == true
                      img(src="/images/verified.jpg" width="25px" height="25px" style="margin-left:3px;margin-top:-2px;margin-right:5px;")
                  if user.plan == 'plus'
                      span.pewtube-pro PLUS
                    
                  div.row(style="padding-right: 10px; padding-left: 10px;")
                      div.col-md-4.col-xs-4.text-center 
                          h4 #{user.receivedSubscriptions.length}
                          p.text-muted Subs
                      div.col-md-4.col-xs-4.text-center
                          h4 $#{user.credit/100}
                          p.text-muted Credit
                      div.col-md-4.col-xs-4.text-center
                          h4 $$#{user.receivedCredit / 100}
                          p.text-muted Revenue

              div
                  ul.list-group
                      li.list-group-item
                          a(href=`/user/${user.channelUrl}`) Channel Page
                      li.list-group-item
                          a(href="/account/viewHistory") View History
                      li.list-group-item
                          a(href="/account/reactHistory") React History
                      li.list-group-item
                        a(href="/account/livestreaming") Livestreaming

          div.col-md-6.col-sm-12
              h3.text-center.text-muted Edit Your Account Details
              br
              //form.upload-form(role="form" method="POST" enctype="multipart/form-data")
              form.update-user-details-form.text-center(role="form" method="POST" enctype="multipart/form-data" action=`${thumbnailServer}/account/profile`)
                  input(type="hidden" name="uploadToken" value=`${user.uploadToken}`)

                  h4 Channel Display Name
                  div.form-group
                      input.form-control.center-block(type='text', name='channelName', id='channelName', minlength=3, maxlength=25, value=user.channelName style="width: 50%")

                  h4 Channel Description
                  div.form-group
                      textarea(id="description" name="description" maxlength='500' rows="7" cols="70") #{user.channelDescription}

                  h4 Channel Thumbnail
                  div.form-group
                      input.center-block.text-center(class="upload-file" data-max-size="500000000" type="file" name="filetoupload" accept="image/*")
                      p.help-block Thumbnails up to 302 x 168 pixels are accepted.

                  button.btn.btn.btn-primary(type='submit')
                        i.fa.fa-pencil
                        | Update Profile

          // TODO: export a variable plus_enabled if user enables payments
          div.col-md-4
              if !plus_enabled
                  h3.text-center.text-muted NodeTube Plus
                  br
                  div.card.alert-success
                    div.pt-plus.center-div.text-center
                      if user.plan == 'plus'
                        p Thank you so much for subscribing!
                        p This area is currently being expanded
                        p In the meantime enjoy your new features:
                        h4 Automatic YouTube backup functionality, unlisted uploads, private uploads, 2GB upload size
                      else
                        p(style="white-space:pre-line;margin-bottom:19px;").
                          - Upload file-size limit raised to 2GB

                          - Unlisted, private and scheduled uploads

                          - Livestream video, audio or screensharing

                          - Built in monetization via direct payments (COMING SOON)

                          - Access to NodeTube Recording Studio (COMING SOON)

                          - One-click complete YouTube backup (including future uploads)

                          - Early access to all beta features

                          - $4.95/month, cancel at any time

                        button.stripe-button-el#customButton(type="submit" class="stripe-button-el" style="visibility: visible;")
                          span(style="display: block; min-height: 30px;") Buy Now

                  if user.plan == 'plus' || user.youtubeChannelId
                    h3.ytBackup
                      br
                      br
                      br
                      h3.text-center YouTube Backup
                      br

                      //form
                      //  .form-group
                      //    .col-sm-offset-3.col-sm-7
                      //      a.btn.btn-block.btn-google.btn-social(href='/auth/youtube')
                      //        i.fa.fa-youtube
                      //        | Sign in with YouTube
                      //
                      //br
                      //br

                    if !user.youtubeChannelId
                      form.form-horizontal
                        .form-group
                          label.col-sm-3.control-label(for='youtubeChannelId') YouTube Username Or Channel ID
                          .col-sm-7
                            input.form-control(type='youtubeChannelId', name='youtubeChannelId', id='youtubeChannelId')
                        .form-group
                          .col-sm-offset-3.col-sm-4
                            button.btn.btn-primary.saveChannelId(type='submit')
                              i.fa.fa-pencil
                              | Save Channel Username


                        br
                        div.form-group.disabled
                          label.col-sm-3.control-label(for='youtubeChannelId') Status
                          .col-sm-7.disabled
                            input.disable(type='checkbox', disabled='', data-toggle='toggle')

                    else
                      div(style="text-align:center")
                        label.control-label(for='updateStatus') YouTube Channel Id
                        h5 #{user.youtubeChannelId}
                        br

                        label.control-label(for='updateStatus') Status
                        br
                        if user.userSettings.backupOn == false
                          input(id="toggle-event" type='checkbox', data-toggle='toggle')
                        else if user.userSettings.backupOn == true
                          input(id="toggle-event" type='checkbox', checked='', data-toggle='toggle')
                        div(id="console-event")



  

  script.
    // capture submit
    $('.update-user-details-form').submit(function (event) {

      event.preventDefault()

      console.log('running here')

      var url = [location.protocol, '//', location.host, location.pathname].join('');

      var $theForm = $(this);

      var data = new FormData($theForm[0]);

      // send xhr request
      $.ajax({
        type: $theForm.attr('method'),
        url: $theForm.attr('action'),
        data,
        cache: false,
        contentType: false,
        processData: false,
        success: function (data) {
          // TODO: can turn into /user/anthony/tSIHmBf/edit?update=success?update=success
          window.location = url + '?update=success'
          console.log(data);
        }
      })
      // prevent submitting again
      return false;

    });

    // capture submit
    $('.delete-user-thumbnail-form').submit(function (event) {

      event.preventDefault()

      console.log('running here')

      var url = [location.protocol, '//', location.host, location.pathname].join('');

      var $theForm = $(this);

      var data = new FormData($theForm[0]);

      // send xhr request
      $.ajax({
        type: $theForm.attr('method'),
        url: $theForm.attr('action'),
        data,
        cache: false,
        contentType: false,
        processData: false,
        success: function (data) {
          // TODO: can turn into /user/anthony/tSIHmBf/edit?update=success?update=success
          window.location = url + '?thumbnailDeleted=true'
          console.log(data);
        }
      })
      // prevent submitting again
      return false;

    });





  if user
    script.
      var username = '#{user.channelUrl}'
      var uploadToken = '#{user.uploadToken}'

      console.log(username, uploadToken)

      $('.livestream-button').on('click', function(){
        swal('Please stream to rtmp://broadcast.pewtube.com/live/' + username  + '?key=' + uploadToken + ' \n\n You will be live at https://live.pewtube.com/User/' + username)
      })

  script.
    var stripeToken = '#{stripeToken}'

    var csrf = '#{_csrf}'

    //var handler = StripeCheckout.configure({
    //  key: stripeToken,
    //  image: 'https://f001.backblazeb2.com/file/pewtube/pewtube/RCbutDM.jpg',
    //  locale: 'auto',
    //  // bitcoin: true,
    //  token: function (token) {
    //
    //    var data = {
    //      _csrf: csrf,
    //      token
    //    }
    //
    //    $.ajax({
    //      type: 'POST',
    //      url: `/api/purchase/plus`,
    //      data,
    //      success: function (data) {
    //        if (data == 'success') {
    //          window.location = "/account?to=pt-plus";
    //        } else {
    //          swal("Something didn't work, please contact PewTube at ceo@pew.tube or via the widget in the bottom right corner")
    //        }
    //        console.log(data);
    //      },
    //      error: function (err) {
    //        console.log(err);
    //      }
    //    });


        // TODO: Post this guy to the backend
    //      }
    //    });
    document.getElementById('customButton').addEventListener('click', function (e) {
      // Open Checkout with further options:
      handler.open({
        name: 'NodeTube, Inc.',
        description: 'One Month Of NodeTube Plus',
        amount: 495,
        allowRememberMe: false
        // email: "customer@email.com"
      });
      e.preventDefault();
    });
    // Close Checkout on page navigation:
    window.addEventListener('popstate', function () {
      handler.close();
    });



  script.
    $(function () {

      var plan = '#{user.plan}';

      $('.livestreaming-link').on('click', function (e) {

        console.log('clicked');

        if(plan !== 'plus'){
          e.preventDefault();
          swal('Please purchase Plus to use livestreaming')
        }
      })

      var backupOn = #{user.userSettings.backupOn}

      function getParameterByName(name, url) {
        if (!url) url = window.location.href;
        name = name.replace(/[\[\]]/g, "\\$&");
        var regex = new RegExp("[?&]" + name + "(=([^&#]*)|&|#|$)"),
          results = regex.exec(url);
        if (!results) return null;
        if (!results[2]) return '';
        return decodeURIComponent(results[2].replace(/\+/g, " "));

      }

      var updateSuccess = getParameterByName('update');

      var thumbnailDeleted = getParameterByName('thumbnailDeleted');

      if(thumbnailDeleted){
        swal('The thumbnail has been deleted');
      }

      if (updateSuccess) {
        // scroll into view
        swal('Your profile has been updated')
      }

      var scrollToDiv = getParameterByName('to');

      if(scrollToDiv){
        // scroll into view
        setTimeout(function () {
          $('.' + scrollToDiv).get(0).scrollIntoView();
        }, 1000)
      }

      var csrf = '#{_csrf}'

      $('.saveChannelId').on('click', function (event){
        event.preventDefault();

        var youtubeChannelId =  $('#youtubeChannelId').val();


        var data = {
          _csrf: csrf,
          youtubeChannelId : youtubeChannelId
        }

        $.ajax({
          type: 'POST',
          url: `/account/backup`,
          data,
          success: function (data) {
            console.log(data);

            if (data == 'not legit') {
              swal('Sorry this is not a valid username or channel ID please try again')
            } else if (data.message == 'updated channel id') {
              // swal('Your channel ID was saved, you will start backing up within the hour') // on confirm, refresh


              swal({
                title: "Your channel ID was saved ", // note whether channel id or username
                text: "Auto-backup will start within 60 minutes",
                type: "success"
              }, function () {
                window.location = "/account?to=ytBackup";
              });

              console.log('saved by id')
            } else if (data == 'saved channel username'){
              swal('Sorry this is not a valid username or channel ID please try again')
              console.log('saved by username')
            } else {
              swal('Sorry we didn\'t understand that')
            }

          },
          error: function (err) {
            console.log(err);
          }
        });

      })


      $('#toggle-event').change(function () {
        console.log($(this).prop('checked'));

        var checked = $(this).prop('checked');

        var data = {
          _csrf: csrf,
          backupOn : checked
        }

        $.ajax({
          type: 'POST',
          url: `/account/backup`,
          data,
          success: function (data) {
            console.log(data);

          },
          error: function (err) {
            console.log(err);
          }
        });



      })
    })



