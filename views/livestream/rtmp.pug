extends ../layout

block content
    body
        script(src='https://cdn.jsdelivr.net/npm/hls.js@latest')
        video#video(controls)

        .container
            .row
                .col-md-12(style="margin-bottom:100px")
                    h2.userAmount Users In Room: 1
                    input.message-text(type='text', style='width:600px;margin-top:20px;')
                    button.send-text Send Message
                    p.countdown-timer Countdown to send new message : 10 seconds
                    .messages
                        h1 Messages:
                        #messages-scrollview(style='max-height: 80vh; overflow-y: auto;')
                            ul.message-list
        script.
          var channelUrl = '#{channelUrl}'

          if (Hls.isSupported()) {
            var video = document.getElementById('video');
            var hls = new Hls();
            hls.loadSource('/' + channelUrl + '.m3u8');
            hls.attachMedia(video);
            hls.on(Hls.Events.MANIFEST_PARSED, function () {
              video.play();
            });
          }


        script.
          /** MESSAGING FUNCTIONALITY**/

          var pathName = window.location.pathname;

          var regexp = /\/live\/(.*)/;

          var username = pathName.match(regexp)[1];

          var env = '#{env || 'production'}'

          var messageUrl;

          // var webSocketUrl = 'wss://' + location.host + '/one2many';

          if (env == 'production') {
            webSocketUrl = 'wss://' + 'live.pewtube.com' + '/stream/' + username;
            messageUrl = 'wss://' + 'live.pewtube.com' + '/messages/' + username;
          } else {
            webSocketUrl = 'wss://' + 'localhost:8080' + '/stream/' + username;
            messageUrl = 'wss://' + 'localhost:8080' + '/messages/' + username;
          }

          console.log(messageUrl);

          var messageSocket = new WebSocket(messageUrl);


          var onUserConnection = {
            username: username,
            message: 'CONNECTING'
          };

          messageSocket.onopen = function (event) {
            messageSocket.send(JSON.stringify(onUserConnection));
          };



          var entityMap = {
            '&': '&amp;',
            '<': '&lt;',
            '>': '&gt;',
            '"': '&quot;',
            "'": '&#39;',
            '/': '&#x2F;',
            '`': '&#x60;',
            '=': '&#x3D;'
          };

          function escapeHtml(string) {
            return String(string).replace(/[&<>"'`=\/]/g, function (s) {
              return entityMap[s];
            });
          }

          // var usernamePicked = true;
          var usernamePicked = false;

          var messagingUsername;


          $(document).ready(function () {

            // username selection functionality
            $('.message-text').on('focus', function () {

              if (usernamePicked == false) {
                swal({
                    title: "Pick Username",
                    text: "Please write your username below",
                    input: "text",
                    showCancelButton: true,
                    animation: "slide-from-top",
                    inputPlaceholder: "Username"
                  }).then(function(inputValue){
                    inputValue = inputValue.value;
                    if (inputValue === false) return false;

                    if (inputValue === "") {
                      swal.showInputError("You need to write something!");
                      return false
                    }

                    messagingUsername = inputValue;
                    usernamePicked = true;

                    swal({
                        title: "Nice",
                        text: "You selected the username: " + inputValue,
                        type: "success"
                      }).then(function(){

                       setTimeout(function () {
                          $('.message-text').focus();
                        }, 500)

                      });


                  });

              }

            });

            var amountOfSeconds = 10;

            function runInterval(){
              var myTimer = setInterval(function () {
                amountOfSeconds = amountOfSeconds - 1;
                if (amountOfSeconds >= 0) {
                  $('.countdown-timer').text('Countdown to send new message : ' + amountOfSeconds + ' seconds')
                } else {
                  $('.countdown-timer').text('Countdown to send new message : ' + 10 + ' seconds')
                  amountOfSeconds = 10
                  clearInterval(myTimer)
                }
              }, 1000)
            }

            var messageSent = false;

            // send message via websocket
            function sendChatMessage() {
              var messageText = $('.message-text').val();

              if (messageText == '') {
                return
              }

              if (messageText.length > 150 ) {
                return swal('Please send a smaller message, your message is currently ' + messageText.length + ' but the max is 150');
              }

              console.log(messageSent)

              if(amountOfSeconds !== 10){
               return swal('Please wait ' + amountOfSeconds + ' seconds to send a message');
              } else {
                runInterval()
              }

              messageText = messagingUsername + ': ' + messageText;

              // make sure this username is the username of the streamer
              var onSendMessage = {
                username: username,
                message: messageText
              };

              messageSocket.send(JSON.stringify(onSendMessage));

              messageText = $('.message-text').val('');
            }


            // when send message button clicked
            $('.send-text').on('click', function (e) {
              e.preventDefault();

              sendChatMessage()
            });

            // when enter button clicked
            $(document).keypress(function (e) {
              if (e.which == 13) {
                sendChatMessage()
              }
            });
          });

          var connectedUsersAmount = 0;

          // receive connected user amounts and new messages
          messageSocket.onmessage = function (message) {

            data = JSON.parse(message.data);

            // console.log(data);

            // if message, prepend it to messages list
            if (data.message && data.message !== 'undefined: undefined') {

              var escapedMessage = escapeHtml(data.message);

              $('.message-list').prepend('<li>' + escapedMessage + '</li>').html();

            }

            // if its to do with connected users, append
            if (data.connectedUsersAmount) {
              connectedUsersAmount = data.connectedUsersAmount;

              $('.userAmount').text('Users In Room: ' + connectedUsersAmount);

              // console.log(connectedUsersAmount);
            }

          };


          // close socket on page reload
          window.onbeforeunload = function (event) {
            console.log('closing!');

            var onUserDisconnection = {
              username: username,
              message: 'DISCONNECTING'
            };

            messageSocket.send(JSON.stringify(onUserDisconnection));
            messageSocket.close();
          };


          // keep socket open for messages
          setInterval(function () {

            messageSocket.send(JSON.stringify({message: 'KEEP-ALIVE'}));

          }, 1000 * 10);

